{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caleb\\\\Documents\\\\Technical Challenge\\\\React\\\\technical-challenge\\\\src\\\\PokemonInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PokemonInfo(_ref) {\n  _s();\n\n  let {\n    searchInput\n  } = _ref;\n  //api call with search input\n  //if res = null\n  //return error message\n  //else\n  //return data\n  // Name\n  // Height\n  // Weight\n  // Species\n  // A sprite\n  // List of base stats\n  // The number of games it has appeared in\n  // name: \"\",\n  // height: \"\",\n  // weight: \"\",\n  // species: \"\",\n  // baseStats: \"\",\n  // games: \"\",\n  // sprite: \"\",\n  // name: \"\",\n  // height: \"\",\n  // weight: \"\",\n  // species: \"\",\n  // baseStats: \"\",\n  // games: \"\",\n  // sprite: \"\",\n  const [pokemonInfo, setPokemonInfo] = useState({});\n  const [invalid, setInvalid] = useState(false);\n  useEffect(() => {\n    setInvalid(false);\n    fetch(`https://pokeapi.co/api/v2/pokemon/${searchInput}`).catch(error => {\n      setInvalid(true);\n      return;\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n\n      if (data === null || data === undefined) {\n        setInvalid(true);\n        return;\n      }\n\n      setPokemonInfo({\n        name: data.name,\n        height: data.height,\n        weight: data.weight,\n        species: data.species.name,\n        baseStats: data.stats,\n        games: data.game_indices.length,\n        sprite: data.sprite\n      });\n      return;\n    });\n  }, [searchInput]);\n\n  if (searchInput === \"\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  } else if (invalid == true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [searchInput, \" is not a pokemon.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: pokemonInfo[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(PokemonInfo, \"YaRVVIGlsCKANKzA7xG4uk/oGvk=\");\n\n_c = PokemonInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonInfo\");","map":{"version":3,"names":["React","useEffect","useState","PokemonInfo","searchInput","pokemonInfo","setPokemonInfo","invalid","setInvalid","fetch","catch","error","then","response","json","data","console","log","undefined","name","height","weight","species","baseStats","stats","games","game_indices","length","sprite"],"sources":["C:/Users/caleb/Documents/Technical Challenge/React/technical-challenge/src/PokemonInfo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function PokemonInfo({ searchInput }) {\r\n  //api call with search input\r\n\r\n  //if res = null\r\n  //return error message\r\n\r\n  //else\r\n  //return data\r\n\r\n  // Name\r\n  // Height\r\n  // Weight\r\n  // Species\r\n  // A sprite\r\n  // List of base stats\r\n  // The number of games it has appeared in\r\n  // name: \"\",\r\n  // height: \"\",\r\n  // weight: \"\",\r\n  // species: \"\",\r\n  // baseStats: \"\",\r\n  // games: \"\",\r\n  // sprite: \"\",\r\n  // name: \"\",\r\n  // height: \"\",\r\n  // weight: \"\",\r\n  // species: \"\",\r\n  // baseStats: \"\",\r\n  // games: \"\",\r\n  // sprite: \"\",\r\n  const [pokemonInfo, setPokemonInfo] = useState({});\r\n  const [invalid, setInvalid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setInvalid(false);\r\n    fetch(`https://pokeapi.co/api/v2/pokemon/${searchInput}`)\r\n      .catch((error) => {\r\n        setInvalid(true);\r\n        return;\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data === null || data === undefined) {\r\n          setInvalid(true);\r\n          return;\r\n        }\r\n        setPokemonInfo({\r\n          name: data.name,\r\n          height: data.height,\r\n          weight: data.weight,\r\n          species: data.species.name,\r\n          baseStats: data.stats,\r\n          games: data.game_indices.length,\r\n          sprite: data.sprite,\r\n        });\r\n        return;\r\n      });\r\n  }, [searchInput]);\r\n\r\n  if (searchInput === \"\") {\r\n    return <div></div>;\r\n  } else if (invalid == true) {\r\n    return <div>{searchInput} is not a pokemon.</div>;\r\n  } else {\r\n    return <div>{pokemonInfo[1]}</div>;\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,WAAT,OAAsC;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACnD;EAEA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACdO,UAAU,CAAC,KAAD,CAAV;IACAC,KAAK,CAAE,qCAAoCL,WAAY,EAAlD,CAAL,CACGM,KADH,CACUC,KAAD,IAAW;MAChBH,UAAU,CAAC,IAAD,CAAV;MACA;IACD,CAJH,EAKGI,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALtB,EAMGF,IANH,CAMSG,IAAD,IAAU;MACdC,OAAO,CAACC,GAAR,CAAYF,IAAZ;;MACA,IAAIA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKG,SAA9B,EAAyC;QACvCV,UAAU,CAAC,IAAD,CAAV;QACA;MACD;;MACDF,cAAc,CAAC;QACba,IAAI,EAAEJ,IAAI,CAACI,IADE;QAEbC,MAAM,EAAEL,IAAI,CAACK,MAFA;QAGbC,MAAM,EAAEN,IAAI,CAACM,MAHA;QAIbC,OAAO,EAAEP,IAAI,CAACO,OAAL,CAAaH,IAJT;QAKbI,SAAS,EAAER,IAAI,CAACS,KALH;QAMbC,KAAK,EAAEV,IAAI,CAACW,YAAL,CAAkBC,MANZ;QAObC,MAAM,EAAEb,IAAI,CAACa;MAPA,CAAD,CAAd;MASA;IACD,CAtBH;EAuBD,CAzBQ,EAyBN,CAACxB,WAAD,CAzBM,CAAT;;EA2BA,IAAIA,WAAW,KAAK,EAApB,EAAwB;IACtB,oBAAO;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFD,MAEO,IAAIG,OAAO,IAAI,IAAf,EAAqB;IAC1B,oBAAO;MAAA,WAAMH,WAAN;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFM,MAEA;IACL,oBAAO;MAAA,UAAMC,WAAW,CAAC,CAAD;IAAjB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;AACF;;GAnEuBF,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}